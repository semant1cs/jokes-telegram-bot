import telegram

from database import FeedbackJoke, AddedJoke, JokesStateClass
from keyboard import start_keyboard, choose_theme_joke_keyboard, messages_to_handle_keyboard, removed_keyboard
from utils import is_jokes_anymore


async def handle_start_command(update, context):
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–µ–∫–¥–æ—Ç—ã, –ø—Ä–∏–¥—É–º–∞–Ω–Ω—ã–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º",
        reply_markup=start_keyboard
    )


async def start_dialog(update, context):
    await context.bot.send_message(chat_id=update.effective_chat.id,
                                   text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –∞–Ω–µ–∫–¥–æ—Ç–∞",
                                   reply_markup=choose_theme_joke_keyboard)


async def get_help(update, context):
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–≠—Ç–æ—Ç –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–µ–∫–¥–æ—Ç—ã, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–µ–∫—Ç–æ–º\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∞–Ω–µ–∫–¥–æ—Ç"
             " –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ü–µ–Ω–∫–∏ (–Ω—Ä–∞–≤–∏—Ç—Å—è/–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è)\n–ù–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª –±—É–¥—É—Ç –≤—ã–ª–æ–∂–µ–Ω—ã "
             "—Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞–Ω–µ–∫–¥–æ—Ç—ã –ø—Ä–æ—à–ª–æ–≥–æ –¥–Ω—è\n"
    )
    await context.bot.send_photo(photo="https://basket-09.wb.ru/vol1181/part118162/118162658/images/c516x688/1.jpg",
                                 chat_id=update.effective_chat.id)


async def choose_theme_joke(update, context):
    added_joke = AddedJoke.get_random_joke_from_db(update.effective_chat.id)

    # –í—ã–±–æ—Ä —Ç–µ–º—ã –∞–Ω–µ–∫–¥–æ—Ç–∞

    if not is_jokes_anymore(added_joke.count_jokes_after):
        await send_no_available_jokes_message(update, context)
    else:
        await send_joke(update, context, messages_to_handle_keyboard)


async def print_about_us(update, context):
    await context.bot.send_message(chat_id=update.effective_chat.id,
                                   text="–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞: @s3mant1cs \n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏: @fishvel –ø–æ–∫–∞ —á—Ç–æ –≤ –≤–∏–Ω–æ\-–≤–æ–¥–æ—á–Ω–æ–º —Ç—É—Ä–Ω—ç\n"
                                        "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –∏–¥–µ–∏, –≥–µ–Ω–∏–∏: @nikitamels, –Ø–¥–µ—Ä–Ω—ã–π –º—É—Ä–∞–≤–µ–π –ê–Ω–∞—Å—Ç–∞—Å–∏—è",
                                   parse_mode=telegram.constants.ParseMode.MARKDOWN_V2)


async def send_joke(update, context, keyboard):
    added_joke = AddedJoke.get_random_joke_from_db(update.effective_chat.id)

    if not is_jokes_anymore(added_joke.count_jokes_after):
        await send_no_available_jokes_message(update, context)
    else:
        await context.bot.send_message(chat_id=update.effective_chat.id,
                                       text=added_joke.text_joke,
                                       reply_markup=keyboard)
        FeedbackJoke.update_joke_read(added_joke.id, update.effective_chat.id)


async def send_no_available_jokes_message(update, context):
    await context.bot.send_message(chat_id=update.effective_chat.id,
                                   text="–î–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å\n–ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ:)",
                                   reply_markup=removed_keyboard)

async def reply_to_feedback(update, context):
    if is_user_read_anyone_joke(update):
        last_read_joke = JokesStateClass.get_unread_jokes(update.effective_chat.id).read_jokes[-1]
    else:
        await handle_start_command(update, context)
        return

    if update.message.text == "üëç":
        FeedbackJoke.increment_grade(last_read_joke, 'likes')
    elif update.message.text == "üëé":
        FeedbackJoke.increment_grade(last_read_joke, 'dislikes')
    elif update.message.text == "‚ùå":
        await context.bot.send_message(chat_id=update.effective_chat.id, text="–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –µ—â—ë ü•∫",
                                       reply_markup=start_keyboard)
        return
    await send_joke(update, context, messages_to_handle_keyboard)


async def reply_to_unknown_message(update, context):
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–ù–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –Ø –≥–µ–Ω–µ—Ä–∏—Ä—É—é –∞–Ω–µ–∫–¥–æ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –µ–≥–æ –æ—Ü–µ–Ω–∫–∏ –ø—Ä–∏ –ø–æ–º–æ—â–∏ —ç–º–æ–¥–∑–∏ üëç –∏–ª–∏ üëé"
    )

def is_user_read_anyone_joke(update):
    try:
        last_read_joke = JokesStateClass.get_unread_jokes(update.effective_chat.id).read_jokes[-1]
    except IndexError:
        return False
    return True
